#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>    //Include wire library 
#include <MPU6050_light.h>  //Include library for MPU communication
LiquidCrystal_I2C lcd(0x27, 16, 2);
#define echoPin 7
#define trigPin 8
long duration, distance;

MPU6050 mpu(Wire);   //Create object mpu
unsigned long timer = 0;
void setup() {

  Serial.begin(9600);    //Start serial communication
   lcd.init();     //Start LCD Display
  lcd.backlight();    

  Wire.begin();     
  mpu.begin();     
  Serial.print(F("MPU6050 status: "));
  Serial.println(F("Calculating offsets, do not move MPU6050"));   
  delay(1000);
  mpu.calcGyroOffsets();     //Calibrate gyroscope
  Serial.println("Done!\n");
  Serial.begin (9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
}
void loop() {
  mpu.update();    //Get values from MPU

  if ((millis() - timer) > 100) { // print data every 100ms
    timer = millis();
    lcd.clear();
    lcd.print(" Angle: ");
    lcd.print(int(mpu.getAngleZ()));     //Print Z angle value on LCD 
    delay(10);
  }
  {
  delay(150);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration / 58.2;
  String disp = String(distance);
  lcd.clear();
  lcd.print("distance :");
  lcd.setCursor(0, 1);
  lcd.print(disp);
  lcd.print(" cm");
}{
  delay(150);
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = duration / 58.2;
  String disp = String(distance);
  lcd.clear();
  lcd.print("Distance :");
  lcd.setCursor(0, 1);
  lcd.print(disp);
  lcd.print(" cm");
}
}
